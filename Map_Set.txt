### [ Map과 Set 의 차이 ]

## Set

- Set이란 데이터의 집합
- List와 달리 **중복을 허용하지 않음**

## Set의 종류 in Java

- **HashSet** : 순서를 보장하지 않는 set
- **TreeSet** : Binary Search Tree 구조, 오름차순 데이터 저장

       (장점 : 정렬 및 탐색에 성능이 좋음 / 단점 : 추가와 삭제에 시간이 더 걸림)

- **LinkedHashSet** : 데이터가 들어간 순서대로 저장하는 set

---

## Map

- Map이란 **Key**와 **Value**로 이뤄진 데이터의 집합
- Key의 중복은 허용되지 않고, Value의 중복은 가능하다.

## Map의 종류 in Java

- **HashMap** : 순서를 보장하지 않는 map, Key와 Value로 null이 허용
- **HashTable** : 동기화를 지원하는 map, Key와 Value로 null이 허용되지 않음
- **TreeMap** : Binary Search Tree구조의 map, 저장 시 Key 기준으로 오름차순 저장
- **LinkedHashMap** : 들어간 순서대로 저장되는 map

** 동기화 : multithread 환경에서도 안전하게 사용 가능, 여러개의 스레드가 한개의 메소드를 동시에 접근하는 것을 방지해 멀티스레드 환경에서 안전하게 객체를 추가, 삭제할 수 있음을 의미

(동시에 한 메소드를 실행할 수 없고 하나의 스레드가 실행을 완료해야만 다른 스레드가 실행 가능)

** thread(스레드) : 어떠한 프로그램 내에서, 특히 프로세스 내에서 실행되는 흐름의 단위

---

## List , Set , Map의 차이

- **List**는 기본적으로 순서대로 데이터가 들어가며 중복을 허용
- **Set**은 순서가 보장되지 않고 중복을 허용하지 않음
- **Map**은 순서가 보장되지 않고, Key 중복은 허용하지 않지만 Value의 중복은 허용

---

## Graph(그래프)

- Graph(그래프)란 node와 node를 연결하는 edge를 하나로 모은 자료구조
- 무방향, 양방향, 단방향 다 가능
- 루트 노드 개념이 없다
- 순환, 비순환, Self loop도 가능
- 사이클이 없는 Graph는 Tree와 같다

## Graph 와 Tree의 차이

- Tree는 사이클이 없다, but Graph는 사이클이 있다
- Tree는 한 개의 루트 노드가 있다. 그래서 Tree는 계층 모델이 된다
- Graph는 루트 노드가 없기에 네트워크 모델이다
- Tree의 간선 개수는 항상 정점 개수 -1, Graph는 정해져 있지 않다